package com.example.demo.Services;

import com.example.demo.Configurations.ApplicationConfig;
import com.example.demo.DTO.DTOUserGroup;
import com.example.demo.Entities.UserGroupEntity;
import com.example.demo.Repositories.UserGroupRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import java.util.stream.Collectors;

@Service
public class UserGroupService {

    @Autowired
    private UserGroupRepo userGroupRepo;

    @Autowired
    private ApplicationConfig applicationConfig;


    public List<DTOUserGroup> getAll() {
        return userGroupRepo.findAll()
                .stream()
                .map(this::convertEntityToDto)
                .collect(Collectors.toList());
         }


    public UserGroupEntity addUserGroup(UserGroupEntity userGroupEntity)
    {      return userGroupRepo.save(userGroupEntity); }


    public void deleteById(long id) { userGroupRepo.deleteById(id);}


    public UserGroupEntity updateById(long id, UserGroupEntity userGroupEntity) {
        if(userGroupRepo.existsById(id)) {
            userGroupEntity.setId(id);
            userGroupRepo.save(userGroupEntity);}
        return null;
    }




    //CONVERTERS

    //Entity to DTO
    private DTOUserGroup convertEntityToDto(UserGroupEntity userGroupEntity){
        DTOUserGroup dTOUserGroup = applicationConfig.modelMapper().map(userGroupEntity, DTOUserGroup.class);
        return dTOUserGroup;}

    //DTO to Entity
    private UserGroupEntity convertDTOToEntity(DTOUserGroup dTOUserGroup) {
        UserGroupEntity userGroupEntity = applicationConfig.modelMapper().map(dTOUserGroup, UserGroupEntity.class);
        return userGroupEntity; }


}
